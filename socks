#!/bin/sh

REMOTE_USER="user"            # Your username on the remote machine.
REMOTE_ADDR="127.0.0.1"       # The IP address or domain name to connect to.
LOCAL_PORT="2000"             # The port you have set up to forward local traffic through.
SSH_PORT="22"                 # Whatever port ssh is listening on (usually 22).
ERROR_LOG="$HOME/.proxy.log"  # Error stuff will go here.
PID_FILE="$HOME/.proxy.pid"   # Store the SSH pid so that we can kill it on teardown.

PROXY_CMD="ssh -ND $LOCAL_PORT $REMOTE_USER@$REMOTE_ADDR -p $SSH_PORT"

# Start proxy connection, enable SOCKS proxy in settings
socks_on() {
   echo "Initializing tunnel at port $LOCAL_PORT..."
   $PROXY_CMD 2> $ERROR_LOG &
   echo $! > $PID_FILE

   # Enable Proxy
   sudo networksetup -setsocksfirewallproxystate Wi-Fi on
}

# Disable SOCKS proxy in settings and kill ssh process
socks_off() {
   echo "Tearing down tunnel at $LOCAL_PORT..."
   kill `cat $PID_FILE`

   # Truncate pid file
   echo '' > $PID_FILE
   sudo networksetup -setsocksfirewallproxystate Wi-Fi off
}

# Print out information about whether a tunnel is running and if the proxy
# setting is on
socks_status() {
   SSH_PID=`cat $PID_FILE`

   if [ -z "$SSH_PID" ]; then
      NUM_LINES=""
   else
      NUM_LINES=`ps -p $SSH_PID | awk 'NR>1'`
   fi

   # Strip first row from ps output
   # If no other rows, process is not running
   if [ -z "$NUM_LINES" ]; then
      # SSH tunnel is not running
      echo "SSH tunnel is NOT running."
   else
      echo "SSH tunnel is running."
      echo "Process Info:"
      ps -p $SSH_PID
   fi

   printf "\n"

   echo "Proxy Setting Status:"
   networksetup -getsocksfirewallproxy Wi-Fi
}

socks_refresh() {
   # If pid file is not empty, see if the process is running and kill it.
   SSH_PID=`cat $PID_FILE`

   if [ -n "$SSH_PID" ]; then
      SSH_RUNNING=`ps -p $SSH_PID | awk 'NR>1'`

      if [ -n "$SSH_RUNNING" ]; then
         kill $SSH_PID
      fi
   fi

   # Rerun ssh connection
   $PROXY_CMD 2> $ERROR_LOG &
   echo $! > $PID_FILE
}

socks_help() {
   echo 'Usage: socks on/off/status/refresh (Get it? Like socks?)'
   exit -1
}

ACTION="$1"

if [ "$ACTION" = "on" ]; then
   socks_on
elif [ "$ACTION" = "off" ]; then
   socks_off
elif [ "$ACTION" = "status" ]; then
   socks_status
elif [ "$ACTION" = "refresh" ]; then
   socks_refresh
else
   socks_help
fi
